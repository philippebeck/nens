swagger: "2.0"
info:
  title: SEN API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3000
basePath: /
schemes:
  - https
paths:
  # ! ARTICLES
  /articles:
    # GET /articles => List Articles
    get:
      tags:
        - Article Module
      summary: List Articles
      description: API to List all Articles
      produces:
      - application/json
      responses:
        "200":
          description: All Articles have been Successully Listed
          schema:
            type: array
            items:
              $ref: "#/definitions/ArticleRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # POST /articles => Create Article
    post:
      security:
        - Bearer: []
      tags:
        - Article Module
      summary: Create Article
      description: API to Create an Article
      parameters:
        - in: body
          name: body
          description: createArticle() Payload
          required: true
          schema:
            $ref: "#/definitions/ArticleReq"
      produces:
        - application/json
      responses:
        "201":
          description: Article Created Successfully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /articles/{id}:
    # GET /articles/{id} => Read Article
    get:
      tags:
        - Article Module
      summary: Read Article
      description: API to Read an Article
      produces:
      - application/json
      responses:
        "200":
          description: Article Read Successully
          schema:
            $ref: "#/definitions/ArticleRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # PUT /articles/{id} => Update Article
    put:
      security:
        - Bearer: []
      tags:
        - Article Module
      summary: Update Article
      description: API to Update an Article
      parameters:
        - in: body
          name: body
          description: updateArticle() Payload
          required: true
          schema:
            $ref: "#/definitions/ArticleReq"
      produces:
        - application/json
      responses:
        "200":
          description: Article Updated Successully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # DELETE /articles/{id} => Delete Article
    delete:
      security:
        - Bearer: []
      tags:
        - Article Module
      summary: Delete Article
      description: API to Delete an Article
      produces:
      - application/json
      responses:
        "204":
          description: Article Successully Deleted
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # ! AUTH
  /auth:
    # GET /auth/{id} => Read Avatar
    get:
      tags:
        - Auth Module
      summary: Read Avatar
      description: API to Read an Avatar
      produces:
      - application/json
      responses:
        "200":
          description: Avatar Read Successully
          schema:
            $ref: "#/definitions/AvatarRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # POST /auth => Login User
    post:
      tags:
        - Auth Module
      summary: Login User
      description: API to Login the User
      parameters:
        - in: body
          name: body
          description: loginUser() Payload
          required: true
          schema:
            $ref: "#/definitions/AuthReq"
      produces:
        - application/json
      responses:
        "201":
          description: User Logged In Successfully
          schema:
            $ref: "#/definitions/AuthRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  # POST /auth/pass => Forgot Pass
  /auth/pass:
    post:
      tags:
        - Auth Module
      summary: Forgot Pass
      description: API to Send a new Password
      parameters:
        - in: body
          name: body
          description: forgotPass() Payload
          required: true
          schema:
            $ref: "#/definitions/PassReq"
      produces:
        - application/json
      responses:
        "200":
          description: New Password Sended Successfully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  # POST /auth/recaptcha => Check Recaptcha
  /auth/recaptcha:
    post:
      tags:
        - Auth Module
      summary: Check Recaptcha
      description: API to Check the Recaptcha
      parameters:
        - in: body
          name: body
          description: checkRecaptcha() Payload
          required: true
          schema:
            $ref: "#/definitions/AuthReq"
      produces:
        - application/json
      responses:
        "200":
          description: Recaptcha Checked Successfully
          schema:
            $ref: "#/definitions/AuthRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # ! GALLERIES
  /galleries:
    # GET /galleries => List Galleries
    get:
      tags:
        - Gallery Module
      summary: List Galleries
      description: API to List all Galleries
      produces:
      - application/json
      responses:
        "200":
          description: All Galleries have been Successully Listed
          schema:
            type: array
            items:
              $ref: "#/definitions/GalleryRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # POST /galleries => Create Article
    post:
      security:
        - Bearer: []
      tags:
        - Gallery Module
      summary: Create Gallery
      description: API to Create a Gallery
      parameters:
        - in: body
          name: body
          description: createGallery() Payload
          required: true
          schema:
            $ref: "#/definitions/GalleryReq"
      produces:
        - application/json
      responses:
        "201":
          description: Gallery Created Successfully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /galleries/{id}:
    # GET /galleries/{id} => Read Article
    get:
      tags:
        - Gallery Module
      summary: Read Gallery
      description: API to Read a Gallery
      produces:
      - application/json
      responses:
        "200":
          description: Gallery Read Successully
          schema:
            $ref: "#/definitions/GalleryRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # PUT /galleries/{id} => Update Article
    put:
      security:
        - Bearer: []
      tags:
        - Gallery Module
      summary: Update Gallery
      description: API to Update a Gallery
      parameters:
        - in: body
          name: body
          description: updateGallery() Payload
          required: true
          schema:
            $ref: "#/definitions/GalleryReq"
      produces:
        - application/json
      responses:
        "200":
          description: Gallery Updated Successully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # DELETE /galleries/{id} => Delete Article
    delete:
      security:
        - Bearer: []
      tags:
        - Gallery Module
      summary: Delete Gallery
      description: API to Delete a Gallery
      produces:
      - application/json
      responses:
        "204":
          description: Gallery successully Deleted
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # ! IMAGES
  /images:
    # GET /images => List Images
    get:
      tags:
        - Image Module
      summary: List Images
      description: API to List all Images
      produces:
      - application/json
      responses:
        "200":
          description: All Images have been Successully Listed
          schema:
            type: array
            items:
              $ref: "#/definitions/ImageRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # POST /images => Create Image
    post:
      security:
        - Bearer: []
      tags:
        - Image Module
      summary: Create Image
      description: API to Create an Image
      parameters:
        - in: body
          name: body
          description: createImage() Payload
          required: true
          schema:
            $ref: "#/definitions/ImageReq"
      produces:
        - application/json
      responses:
        "201":
          description: Image Created Successfully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /images/{id}:
    # GET /images/{id} => Read Image
    get:
      tags:
        - Image Module
      summary: Read Image
      description: API to Read an Image
      produces:
      - application/json
      responses:
        "200":
          description: Gallery Read Successully
          schema:
            $ref: "#/definitions/ImageRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # PUT /images/{id} => Update Image
    put:
      security:
        - Bearer: []
      tags:
        - Image Module
      summary: Update Image
      description: API to Update an Image
      parameters:
        - in: body
          name: body
          description: updateImage() Payload
          required: true
          schema:
            $ref: "#/definitions/ImageReq"
      produces:
        - application/json
      responses:
        "200":
          description: Image Updated Successully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # DELETE /images/{id} => Delete Image
    delete:
      security:
        - Bearer: []
      tags:
        - Image Module
      summary: Delete Image
      description: API to Delete an Image
      produces:
      - application/json
      responses:
        "204":
          description: Image successully Deleted
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # ! LINKS
  /links:
    # GET /links => List Links
    get:
      tags:
        - Link Module
      summary: List Links
      description: API to List all Links
      produces:
      - application/json
      responses:
        "200":
          description: All Links have been Successully Listed
          schema:
            type: array
            items:
              $ref: "#/definitions/LinkRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # POST /links => Create Link
    post:
      security:
        - Bearer: []
      tags:
        - Link Module
      summary: Create Link
      description: API to Create a Link
      parameters:
        - in: body
          name: body
          description: createLink() Payload
          required: true
          schema:
            $ref: "#/definitions/LinkReq"
      produces:
        - application/json
      responses:
        "201":
          description: Link Created Successfully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /links/{id}:
    # PUT /links/{id} => Update Link
    put:
      security:
        - Bearer: []
      tags:
        - Link Module
      summary: Update Link
      description: API to Update a Link
      parameters:
        - in: body
          name: body
          description: updateLink() Payload
          required: true
          schema:
            $ref: "#/definitions/LinkReq"
      produces:
        - application/json
      responses:
        "200":
          description: Link Updated Successully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # DELETE /links/{id} => Delete Link
    delete:
      security:
        - Bearer: []
      tags:
        - Link Module
      summary: Delete Link
      description: API to Delete a Link
      produces:
      - application/json
      responses:
        "204":
          description: Link successully Deleted
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # ! USERS
  /users:
    # GET /users => List Users
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: List Users
      description: API to List all Users
      produces:
      - application/json
      responses:
        "200":
          description: All Users have been Successully Listed
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # POST /users => Create User
    post:
      tags:
        - User Module
      summary: Create User
      description: API to Create a User
      parameters:
        - in: body
          name: body
          description: createUser() Payload
          required: true
          schema:
            $ref: "#/definitions/UserReq"
      produces:
        - application/json
      responses:
        "201":
          description: User Created Successfully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /users/{id}:
    # GET /users/{id} => Read User
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Read User
      description: API to Read a User
      produces:
      - application/json
      responses:
        "200":
          description: User Read Successully
          schema:
            $ref: "#/definitions/UserRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # PUT /users/{id} => Update User
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User
      description: API to Update a User
      parameters:
        - in: body
          name: body
          description: updateUser() Payload
          required: true
          schema:
            $ref: "#/definitions/UserReq"
      produces:
        - application/json
      responses:
        "200":
          description: User Updated Successully
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    # DELETE /users/{id} => Delete User
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete User
      description: API to Delete a User
      produces:
      - application/json
      responses:
        "204":
          description: User Successully Deleted
          schema:
            $ref: "#/definitions/BasicRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  # POST /users/message => Send Message
  /users/message:
    post:
      tags:
        - User Module
      summary: Send Message
      description: API to Send a User Message
      parameters:
        - in: body
          name: body
          description: sendMessage() Payload
          required: true
          schema:
            $ref: "#/definitions/MessageReq"
      produces:
        - application/json
      responses:
        "200":
          description: Message Sent Successfully
          schema:
            $ref: "#/definitions/MessageRes"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

# ! TOKEN
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  # ! REQUESTS
  ArticleReq:
    properties:
      name:
        type: string
        description: article name
      text:
        type: string
        description: article content
      image:
        type: string
        description: article image
      alt:
        type: string
        description: alternative text of article image
      cat:
        type: string
        description: article category
  AuthReq:
    properties:
      email:
        type: string
        description: user email
      pass:
        type: string
        description: user password
  GalleryReq:
    properties:
      name:
        type: string
        description: gallery name
      author:
        type: string
        description: gallery author
  ImageReq:
    properties:
      name:
        type: string
        description: image name
      description:
        type: string
        description: image description
  LinkReq:
    properties:
      name:
        type: string
        description: link name
      url:
        type: string
        description: link url
      cat:
        type: string
        description: link category
  MessageReq:
    properties:
      email:
        type: string
        description: user email
      subject:
        type: string
        description: message subject
      text:
        type: string
        description: message content
  PassReq:
    properties:
      email:
        type: string
        description: user email
  UserReq:
    properties:
      name:
        type: string
        description: user name
      email:
        type: string
        description: user email
      image:
        type: string
        description: user image
      password:
        type: string
        description: user password

  # ! RESPONSES
  ArticleRes:
    type: object
    properties:
      id:
        type: number
        description: article id
      name:
        type: string
        description: article name
      text:
        type: string
        description: article content
      image:
        type: string
        description: article image
      alt:
        type: string
        description: alternative text of article image
      cat:
        type: string
        description: article category
      created:
        type: string
        format: date
        description: article creation
      upated:
        type: string
        format: date
        description: article update
  AuthRes:
    type: object
    properties:
      userId:
        type: string
        description: user id
      userToken:
        type: string
        description: user token
  AvatarRes:
    type: object
    properties:
      name:
        type: string
        description: user name
      image:
        type: string
        description: user image
      role:
        type: string
        description: user role
  BasicRes:
    properties:
      status:
        type: integer
        description: status code
      message:
        type: string
        description: confirm message
  GalleryRes:
    properties:
      name:
        type: string
        description: gallery name
      author:
        type: string
        description: gallery author
      cover:
        type: string
        description: gallery cover image
  ImageRes:
    properties:
      name:
        type: string
        description: image name
      description:
        type: string
        description: image description
      gallery_id:
        type: number
        description: gallery id
  LinkRes:
    properties:
      name:
        type: string
        description: link name
      url:
        type: string
        description: link url
      cat:
        type: string
        description: link category
  MessageRes:
    type: object
    properties:
      status:
        type: integer
        description: status code
      message:
        type: string
        description: confirm message
  UserRes:
    type: object
    properties:
      id:
        type: number
        description: user id
      name:
        type: string
        description: user name
      email:
        type: string
        description: user email
      image:
        type: string
        description: user image
      role:
        type: string
        description: user role
      created:
        type: string
        format: date
        description: user creation
      upated:
        type: string
        format: date
        description: user update
